{"ast":null,"code":"var _jsxFileName = \"/Users/heejunseo/Desktop/React-e/ts-cars/react-cars/src/app/components/button/index.tsx\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BaseButton = styled.button`\n  ${{\n  \"paddingLeft\": \"1.25rem\",\n  \"paddingRight\": \"1.25rem\",\n  \"paddingTop\": \"0.75rem\",\n  \"paddingBottom\": \"0.75rem\",\n  \"outline\": \"2px solid transparent\",\n  \"outlineOffset\": \"2px\",\n  \"borderRadius\": \"0.375rem\",\n  \"--tw-text-opacity\": \"1\",\n  \"color\": \"rgba(255, 255, 255, var(--tw-text-opacity))\",\n  \"fontSize\": \"0.75rem\",\n  \"lineHeight\": \"1rem\",\n  \"fontWeight\": \"600\",\n  \"borderColor\": \"transparent\",\n  \"borderWidth\": \"2px\",\n  \"borderStyle\": \"solid\",\n  \":focus\": {\n    \"outline\": \"2px solid transparent\",\n    \"outlineOffset\": \"2px\"\n  },\n  \"transitionProperty\": \"all\",\n  \"transitionTimingFunction\": \"cubic-bezier(0.4, 0, 0.2, 1)\",\n  \"transitionDuration\": \"200ms\",\n  \"margin\": \"0.25rem\"\n}};\n`;\nconst OutlinedButton = styled(BaseButton)`\n  min-width: 220px;\n  ${{\n  \"--tw-bg-opacity\": \"1\",\n  \"backgroundColor\": \"rgba(239, 68, 68, var(--tw-bg-opacity))\",\n  \":hover\": {\n    \"backgroundColor\": \"transparent\",\n    \"--tw-text-opacity\": \"1\",\n    \"color\": \"rgba(239, 68, 68, var(--tw-text-opacity))\",\n    \"--tw-border-opacity\": \"1\",\n    \"borderColor\": \"rgba(239, 68, 68, var(--tw-border-opacity))\"\n  }\n}};\n`;\n_c = OutlinedButton;\nconst FilledButton = styled(BaseButton)`\n  min-width: 220px;\n  ${{\n  \"--tw-border-opacity\": \"1\",\n  \"borderColor\": \"rgba(239, 68, 68, var(--tw-border-opacity))\",\n  \"--tw-text-opacity\": \"1\",\n  \"color\": \"rgba(239, 68, 68, var(--tw-text-opacity))\",\n  \"backgroundColor\": \"transparent\",\n  \":hover\": {\n    \"--tw-bg-opacity\": \"1\",\n    \"backgroundColor\": \"rgba(239, 68, 68, var(--tw-bg-opacity))\",\n    \"--tw-text-opacity\": \"1\",\n    \"color\": \"rgba(255, 255, 255, var(--tw-text-opacity))\",\n    \"borderColor\": \"transparent\"\n  }\n}};\n`;\n_c2 = FilledButton;\nexport function Button(props) {\n  const {\n    theme,\n    text,\n    className\n  } = props;\n  if (theme === 'filled') return /*#__PURE__*/_jsxDEV(FilledButton, {\n    className: className,\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 12\n  }, this);else return /*#__PURE__*/_jsxDEV(OutlinedButton, {\n    className: className,\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 15\n  }, this);\n}\n_c3 = Button;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"OutlinedButton\");\n$RefreshReg$(_c2, \"FilledButton\");\n$RefreshReg$(_c3, \"Button\");","map":{"version":3,"sources":["/Users/heejunseo/Desktop/React-e/ts-cars/react-cars/src/app/components/button/index.tsx"],"names":["React","styled","BaseButton","button","OutlinedButton","FilledButton","Button","props","theme","text","className"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AASA,MAAMC,UAAU,GAAGD,MAAM,CAACE,MAAO;AACjC,IAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAkBF;AACJ,CApBA;AAsBA,MAAMC,cAAc,GAAGH,MAAM,CAACC,UAAD,CAAa;AAC1C;AACA,IAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAKF;AACJ,CARA;KAAME,c;AAUN,MAAMC,YAAY,GAAGJ,MAAM,CAACC,UAAD,CAAa;AACxC;AACA,IAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAOF;AACJ,CAVA;MAAMG,Y;AAYN,OAAO,SAASC,MAAT,CAAgBC,KAAhB,EAAqC;AAC1C,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,IAAT;AAAeC,IAAAA;AAAf,MAA6BH,KAAnC;AAEA,MAAIC,KAAK,KAAK,QAAd,EACE,oBAAO,QAAC,YAAD;AAAc,IAAA,SAAS,EAAEE,SAAzB;AAAA,cAAqCD;AAArC;AAAA;AAAA;AAAA;AAAA,UAAP,CADF,KAEK,oBAAO,QAAC,cAAD;AAAgB,IAAA,SAAS,EAAEC,SAA3B;AAAA,cAAuCD;AAAvC;AAAA;AAAA;AAAA;AAAA,UAAP;AACN;MANeH,M","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport tw from 'twin.macro';\n\ninterface IButtonProps {\n  theme?: 'filled' | 'outlined';\n  text: string;\n  className?: string;\n}\n\nconst BaseButton = styled.button`\n  ${tw`\n    pl-5\n    pr-5\n    pt-3\n    pb-3\n    outline-none\n    rounded-md\n    text-white\n    text-xs\n    font-semibold\n    border-transparent\n    border-2\n    border-solid\n    focus:outline-none\n    transition-all\n    duration-200\n    ease-in-out\n    m-1\n  `};\n`;\n\nconst OutlinedButton = styled(BaseButton)`\n  min-width: 220px;\n  ${tw`\n    bg-red-500\n    hover:bg-transparent\n    hover:text-red-500\n    hover:border-red-500\n  `};\n`;\n\nconst FilledButton = styled(BaseButton)`\n  min-width: 220px;\n  ${tw`\n    border-red-500\n    text-red-500\n    bg-transparent\n    hover:bg-red-500\n    hover:text-white\n    hover:border-transparent\n  `};\n`;\n\nexport function Button(props: IButtonProps) {\n  const { theme, text, className } = props;\n\n  if (theme === 'filled')\n    return <FilledButton className={className}>{text}</FilledButton>;\n  else return <OutlinedButton className={className}>{text}</OutlinedButton>;\n}\n"]},"metadata":{},"sourceType":"module"}